{:duct.profile/base
 {:duct.core/project-ns gpml
  :gpml.handler.main/handler {:routes [["/"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.main/root}}]
                                       ["/image/profile/{id}"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.image/profile
                                               :parameters {:path [:map [:id int?]]}}}]
                                       ["/cv/profile/{id}"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.file/profile-cv
                                               :parameters {:path [:map [:id int?]]}}}]
                                       ["/image/event/{id}"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.image/event
                                               :parameters {:path [:map [:id int?]]}}}]
                                       ["/env.js"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.env/get}}]
                                       ["/api"
                                        ["/swagger.json"
                                         {:get {:no-doc true
                                                :swagger {:info {:title "UNEP GPML Digital Platform"
                                                                 :description "GPML Digital Platform API"
                                                                 :version "1.0.0"}
                                                          :securityDefinitions {:id_token {:type "apiKey"
                                                                                           :name "Authorization"
                                                                                           :in "header"}}}
                                                :handler #ig/ref :gpml.handler.main/swagger-handler}}]
                                        ["/country"
                                         {:get {:summary "List available countries"
                                                :swagger {:tags ["country"]}
                                                :parameters {:query [:map [:id {:optional true} int?]]}
                                                :handler #ig/ref :gpml.handler.country/get}}]
                                        ["/browse" {:middleware [#ig/ref :gpml.auth/auth-middleware]}
                                         [""
                                          {:get {:summary "Browse available entities"
                                                 :swagger {:tags ["browse"]}
                                                 :parameters {:query #ig/ref :gpml.handler.browse/query-params}
                                                 :handler #ig/ref :gpml.handler.browse/get}}]]
                                        ["/event" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                #ig/ref :gpml.auth/auth-required
                                                                #ig/ref :gpml.auth/approved-user]}
                                         [""
                                          {:post {:summary "Creates a new event"
                                                  :swagger {:tags ["event"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.event/post-params}
                                                  :handler #ig/ref :gpml.handler.event/post}}]
                                         ["/pending" {:middleware [#ig/ref :gpml.auth/admin-required-middleware]}
                                          [""
                                           {:get {:summary "Get the list events pending for approval"
                                                  :swagger {:tags ["event"]
                                                            :security [{:id_token []}]}
                                                  :handler #ig/ref :gpml.handler.event/pending}}]]
                                         ["/review" {:middleware [#ig/ref :gpml.auth/admin-required-middleware]}
                                          [""
                                           {:put {:summary "Review the event submission of an event"
                                                  :swagger {:tags ["event"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body [:map [:id int? :review_status [:enum "APPROVED" "REJECTED"]]]}
                                                  :handler #ig/ref :gpml.handler.event/review}}]]]
                                        ["/landing"
                                         [""
                                          {:get {:summary "End-point for the landing page"
                                                 :swagger {:tags ["landing"]}
                                                 :handler #ig/ref :gpml.handler.landing/get}}]]
                                        ["/profile" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                  #ig/ref :gpml.auth/auth-required]}
                                         [""
                                          {:get {:summary "Get profile information for the authenticated Stakeholder"
                                                 :swagger {:tags ["profile"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.profile/get}
                                           :post {:summary "Sign up authenticated profile to Stakeholder"
                                                  :swagger {:tags ["profile"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.profile/post-params}
                                                  :handler #ig/ref :gpml.handler.profile/post}
                                           :put {:summary "Update authenticated profile information"
                                                 :swagger {:tags ["profile"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.profile/put}}]
                                         ["/pending" {:middleware [#ig/ref :gpml.auth/admin-required-middleware]}
                                          [""
                                           {:get {:summary "Getting Unapproved list of User",
                                                  :swagger {:tags ["profile"]
                                                            :security [{:id_token []}]}
                                                  :handler #ig/ref :gpml.handler.profile/pending}}]]
                                         ["/review" {:middleware [#ig/ref :gpml.auth/admin-required-middleware]}
                                          [""
                                           {:put {:summary "Profile review by admin"
                                                  :swagger {:tags ["profile"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body [:map
                                                                      [:id number?]
                                                                      [:review_status [:enum "APPROVED" "REJECTED"]]]}
                                                  :handler #ig/ref :gpml.handler.profile/review}}]]]
                                        ["/tag"
                                         ["/:topic-type"
                                          {:get {:summary "List tags by topic type"
                                                 :swagger {:tags ["tags"]}
                                                 :handler #ig/ref :gpml.handler.tag/get}}]]
                                        ["/organisation"
                                         {:get {:summary "List all organisation"
                                                :swagger {:organisation ["organisations"]}
                                                :handler #ig/ref :gpml.handler.organisation/get}}]
                                        ["/favorite" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                   #ig/ref :gpml.auth/auth-required]}
                                         [""
                                          {:get {:summary "List of associations between Stakeholder and topics"
                                                 :swagger {:tags ["favorite"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.favorite/get}
                                           :post {:summary "Creates or updates relations between Stakeholder and topics"
                                                  :swagger {:tags ["favorite"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.favorite/post-params}
                                                  :handler #ig/ref :gpml.handler.favorite/post}}]]]]}

  :duct.server.http/jetty {:handler #ig/ref :gpml.handler.main/handler}

  :gpml.handler.main/root {}
  :gpml.handler.main/swagger-handler {}
  :gpml.handler.country/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.browse/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.browse/query-params {}

  :gpml.handler.landing/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.event/post {:db #ig/ref :duct.database/sql}
  :gpml.handler.event/post-params {}
  :gpml.handler.event/pending {:db #ig/ref :duct.database/sql}
  :gpml.handler.event/review {:db #ig/ref :duct.database/sql}

  :gpml.handler.profile/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.profile/post {:db #ig/ref :duct.database/sql}
  :gpml.handler.profile/post-params {}
  :gpml.handler.profile/put {:db #ig/ref :duct.database/sql}
  :gpml.handler.profile/review {:db #ig/ref :duct.database/sql}
  :gpml.handler.profile/pending {:db #ig/ref :duct.database/sql}

  :gpml.handler.tag/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.organisation/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.image/profile {:db #ig/ref :duct.database/sql}
  :gpml.handler.image/event {:db #ig/ref :duct.database/sql}

  :gpml.handler.file/profile-cv {:db #ig/ref :duct.database/sql}

  :gpml.handler.favorite/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.favorite/post {:db #ig/ref :duct.database/sql}
  :gpml.handler.favorite/post-params {}

  :gpml.handler.env/get {:auth0 {:domain #duct/env "OIDC_ISSUER"
                                 :clientId #duct/env "OIDC_AUDIENCE"}}

  :duct.migrator/ragtime {:migrations #ig/ref :duct.migrator.ragtime/resources}
  :duct.migrator.ragtime/resources {:path "migrations"}
  :duct.database/sql {:jdbc-url #duct/env "DATABASE_URL"}

  :gpml.auth/auth-middleware {:issuer #duct/env "OIDC_ISSUER"
                              :audience #duct/env "OIDC_AUDIENCE"}
  :gpml.auth/auth-required {}
  :gpml.auth/approved-user {:db #ig/ref :duct.database/sql}
  :gpml.auth/admin-required-middleware {:db #ig/ref :duct.database/sql}
  }

 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/test  #duct/include "test"
 :duct.profile/prod  {}

 :duct.module/logging {}
 :duct.module/sql {}
 :duct.module/web {}
 }
