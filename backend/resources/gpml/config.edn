{:duct.profile/base
 {:duct.core/project-ns gpml
  :gpml.handler.main/handler {:routes [["/"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.main/root}}]
                                       ["/image/{image_type}/{id}"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.image/get
                                               :parameters {:path [:map [:image_type string?] [:id int?]]}}}]
                                       ["/cv/profile/{id}"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.file/profile-cv
                                               :parameters {:path [:map [:id int?]]}}}]
                                       ["/env.js"
                                        {:get {:no-doc true
                                               :handler #ig/ref :gpml.handler.env/get}}]
                                       ["/api"
                                        ["/healthz"
                                         {:get {:no-doc true
                                                :handler #ig/ref :gpml.handler.main/root}}]
                                        ["/swagger.json"
                                         {:get {:no-doc true
                                                :swagger {:info {:title "UNEP GPML Digital Platform"
                                                                 :description "GPML Digital Platform API"
                                                                 :version "1.0.0"}
                                                          :securityDefinitions {:id_token {:type "apiKey"
                                                                                           :name "Authorization"
                                                                                           :in "header"}}}
                                                :handler #ig/ref :gpml.handler.main/swagger-handler}}]
                                        ["/country"
                                         {:get {:summary "List available countries"
                                                :swagger {:tags ["country"]}
                                                :handler #ig/ref :gpml.handler.country/get}}]
                                        ["/country-group"
                                         [""
                                          {:get {:summary "List available country groups"
                                                 :swagger {:tags ["country"]}
                                                 :handler #ig/ref :gpml.handler.country-group/get}}]
                                         ["/:id"
                                          {:get {:summary "List countries within a country group"
                                                 :swagger {:tags ["country"]}
                                                 :parameters {:path [:map [:id int?]]}
                                                 :handler #ig/ref :gpml.handler.country-group/get}}]]
                                        ["/browse" {:middleware [#ig/ref :gpml.auth/auth-middleware]}
                                         [""
                                          {:get {:summary "Browse available resources"
                                                 :swagger {:tags ["browse"]}
                                                 :parameters {:query #ig/ref :gpml.handler.browse/query-params}
                                                 :handler #ig/ref :gpml.handler.browse/get}}]]
                                        ["/archive" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                  #ig/ref :gpml.auth/auth-required
                                                                  #ig/ref :gpml.auth/approved-user]}
                                         [""
                                          {:get {:summary "Get the list approved submissions"
                                                 :swagger {:tags ["archive"] :security [{:id_token []}]}
                                                 :parameters {:query [:map [:page {:optional true
                                                                                   :default 1} int?]
                                                                      [:limit {:optional true
                                                                               :default 10} int?]]}
                                                 :handler #ig/ref :gpml.handler.archive/get}}]]
                                        ["/submission" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                     #ig/ref :gpml.auth/auth-required
                                                                     #ig/ref :gpml.auth/approved-user
                                                                     #ig/ref :gpml.auth/admin-required-middleware]
                                                        :responses {401 {:description "Need authentication"}
                                                                    403 {:description "Insufficient permissions"}}}
                                         [""
                                          {:get {:summary "Get the list of pending submissions"
                                                 :swagger {:tags ["submission"] :security [{:id_token []}]}
                                                 :parameters {:query [:map [:page {:optional true
                                                                                   :default 1} int?]
                                                                      [:limit {:optional true
                                                                               :default 10} int?]]}
                                                 :handler #ig/ref :gpml.handler.submission/get}
                                           :put {:summary "Approve or reject a pending submission"
                                                 :swagger {:tags ["submission"] :security [{:id_token []}]}
                                                 :parameters {:body #ig/ref :gpml.handler.submission/put-params}
                                                 :handler #ig/ref :gpml.handler.submission/put}}]
                                         ["/{submission}/{id}"
                                          {:get {:summary "Get the details of a submission"
                                                 :swagger {:tags ["submission"] :security [{:id_token []}]}
                                                 :parameters {:path [:map [:submission string?] [:id int?]]}
                                                 :handler #ig/ref :gpml.handler.submission/get-detail}}]
                                         ]
                                        ["/event" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                #ig/ref :gpml.auth/auth-required
                                                                #ig/ref :gpml.auth/approved-user
                                                                #ig/ref :gpml.auth/admin-required-middleware]}
                                         [""
                                          {:post {:summary "Create a new event"
                                                  :swagger {:tags ["event"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.event/post-params}
                                                  :handler #ig/ref :gpml.handler.event/post}}]]
                                        ["/resource" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                   #ig/ref :gpml.auth/auth-required
                                                                   #ig/ref :gpml.auth/approved-user]}
                                         [""
                                          {:post {:summary "Create a new resource"
                                                  :swagger {:tags ["resource"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.resource/post-params}
                                                  :handler #ig/ref :gpml.handler.resource/post}}]]
                                        ["/policy" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                 #ig/ref :gpml.auth/auth-required
                                                                 #ig/ref :gpml.auth/approved-user]}
                                         [""
                                          {:post {:summary "Create a new policy"
                                                  :swagger {:tags ["policy"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.policy/post-params}
                                                  :handler #ig/ref :gpml.handler.policy/post}}]]
                                        ["/initiative"
                                         [""
                                          {:post {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                               #ig/ref :gpml.auth/auth-required
                                                               #ig/ref :gpml.auth/approved-user]
                                                  :summary "Create a new initiative"
                                                  :swagger {:tags ["initiative"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.initiative/post-params}
                                                  :handler #ig/ref :gpml.handler.initiative/post}}]
                                         ["/:id"
                                          {:get {:summary "Get data for a specific initiative"
                                                 :swagger {:tags ["initiative"]}
                                                 :parameters {:path [:map [:id int?]]}
                                                 :handler #ig/ref :gpml.handler.initiative/get}}]]
                                        ["/technology" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                     #ig/ref :gpml.auth/auth-required
                                                                     #ig/ref :gpml.auth/approved-user]}
                                         [""
                                          {:post {:summary "Create a new technology"
                                                  :swagger {:tags ["technology"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.technology/post-params}
                                                  :handler #ig/ref :gpml.handler.technology/post}}]]
                                        ["/stakeholder"
                                         [""
                                          {:get {:summary "Get all public stakeholders"
                                                 :swagger {:tags ["stakeholder"]}
                                                 :handler #ig/ref :gpml.handler.stakeholder/public}}]]
                                        ["/landing"
                                         [""
                                          {:get {:summary "End-point for the landing page"
                                                 :swagger {:tags ["landing"]}
                                                 :handler #ig/ref :gpml.handler.landing/get}}]]
                                        ["/profile" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                  #ig/ref :gpml.auth/auth-required]}
                                         [""
                                          {:get {:summary "Get profile information for the authenticated Stakeholder"
                                                 :swagger {:tags ["profile"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.profile/get}
                                           :post {:summary "Sign up authenticated profile to Stakeholder"
                                                  :swagger {:tags ["profile"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.profile/post-params}
                                                  :handler #ig/ref :gpml.handler.profile/post}
                                           :put {:summary "Update authenticated profile information"
                                                 :swagger {:tags ["profile"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.profile/put}}]]
                                        ["/currency"
                                         {:get {:summary "List of currency"
                                                :swagger {:tags ["currency"]}
                                                :handler #ig/ref :gpml.handler.currency/all}}]
                                        ["/tag"
                                         [""
                                          {:get {:summary "List tags grouped by category"
                                                 :swagger {:tags ["tag"]}
                                                 :handler #ig/ref :gpml.handler.tag/all}}]
                                         ["/:topic-type"
                                          {:get {:summary "List tags by topic type"
                                                 :swagger {:tags ["tag"]}
                                                 :handler #ig/ref :gpml.handler.tag/by-topic}}]]
                                        ["/organisation"
                                         [""
                                          {:get {:summary "List all organisations"
                                                 :swagger {:tags ["organisation"]}
                                                 :handler #ig/ref :gpml.handler.organisation/get}
                                           :post {:summary "Create new organisation"
                                                  :swagger {:tags ["organisation"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.organisation/post-params}
                                                  :handler #ig/ref :gpml.handler.organisation/post}}]
                                         ["/{id}"
                                          {:get {:summary "Get organisation by id"
                                                 :swagger {:tags ["organisation"]}
                                                 :parameters {:path [:map [:id int?]]}
                                                 :handler #ig/ref :gpml.handler.organisation/get-id}}]]
                                        ["/favorite" {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                                   #ig/ref :gpml.auth/auth-required]}
                                         [""
                                          {:get {:summary "List of associations between Stakeholder and topics"
                                                 :swagger {:tags ["favorite"]
                                                           :security [{:id_token []}]}
                                                 :handler #ig/ref :gpml.handler.favorite/get}
                                           :post {:summary "Creates or updates relations between Stakeholder and topics"
                                                  :swagger {:tags ["favorite"]
                                                            :security [{:id_token []}]}
                                                  :parameters {:body #ig/ref :gpml.handler.favorite/post-params}
                                                  :handler #ig/ref :gpml.handler.favorite/post}}]]
                                        ["/detail"
                                         ["/{topic-type}/{topic-id}"
                                          {:get {:middleware [#ig/ref :gpml.auth/auth-middleware]
                                                 :summary "Get the details for a specific resource"
                                                 :swagger {:tags ["resource detail"]}
                                                 :parameters {:path [:map
                                                                     [:topic-type #ig/ref :gpml.handler.detail/topics]
                                                                     [:topic-id int?]]}
                                                 :handler #ig/ref :gpml.handler.detail/get}
                                           :put {:middleware [#ig/ref :gpml.auth/auth-middleware
                                                              #ig/ref :gpml.auth/auth-required
                                                              #ig/ref :gpml.auth/approved-user
                                                              #ig/ref :gpml.auth/admin-required-middleware]
                                                 :summary "Edit the details for a specific resource"
                                                 :swagger {:tags ["resource detail"]
                                                           :security[{:id_token []}]}
                                                 :parameters {:path [:map
                                                                     [:topic-type #ig/ref :gpml.handler.detail/topics]
                                                                     [:topic-id int?]]
                                                              :body #ig/ref :gpml.handler.detail/put-params}
                                                 :handler #ig/ref :gpml.handler.detail/put}}]]]]
                              :logger #ig/ref :duct.logger/timbre}

  :duct.server.http/jetty {:handler #ig/ref :gpml.handler.main/handler}

  :gpml.handler.main/root {}
  :gpml.handler.main/swagger-handler {}
  :gpml.handler.country/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.country-group/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.browse/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.browse/query-params {}

  :gpml.handler.archive/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.submission/get {:db #ig/ref :duct.database/sql
                                :auth0 {:domain #duct/env "OIDC_ISSUER"
                                        :client-id #duct/env "AUTH0_BACKEND_CLIENT_ID"
                                        :secret #duct/env "AUTH0_BACKEND_SECRET"}}
  :gpml.handler.submission/get-detail {:db #ig/ref :duct.database/sql}
  :gpml.handler.submission/put {:db #ig/ref :duct.database/sql}
  :gpml.handler.submission/put-params {}

  :gpml.handler.landing/get {:db #ig/ref :duct.database/sql}

  [:duct/const :gpml.config/mailjet] {:api-key #duct/env "MAILJET_API_KEY"
                                      :secret-key #duct/env "MAILJET_SECRET_KEY"
                                      :app-name #duct/env "APP_NAME"
                                      :app-domain #duct/env "APP_DOMAIN"}

  :gpml.handler.event/post {:db #ig/ref :duct.database/sql
                            :mailjet-config #ig/ref :gpml.config/mailjet}

  :gpml.handler.event/post-params {}

  :gpml.handler.resource/post {:db #ig/ref :duct.database/sql
                               :mailjet-config #ig/ref :gpml.config/mailjet}

  :gpml.handler.resource/post-params {}

  :gpml.handler.policy/post {:db #ig/ref :duct.database/sql
                             :mailjet-config #ig/ref :gpml.config/mailjet}
  :gpml.handler.policy/post-params {}

  :gpml.handler.technology/post {:db #ig/ref :duct.database/sql
                                 :mailjet-config #ig/ref :gpml.config/mailjet}
  :gpml.handler.technology/post-params {}

  :gpml.handler.initiative/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.initiative/post {:db #ig/ref :duct.database/sql
                                 :mailjet-config #ig/ref :gpml.config/mailjet}
  :gpml.handler.initiative/post-params {}

  :gpml.handler.profile/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.stakeholder/public {:db #ig/ref :duct.database/sql}
  :gpml.handler.profile/post {:db #ig/ref :duct.database/sql
                              :mailjet-config #ig/ref :gpml.config/mailjet}
  :gpml.handler.profile/post-params {}
  :gpml.handler.profile/put {:db #ig/ref :duct.database/sql}
  :gpml.handler.currency/all {:db #ig/ref :duct.database/sql}

  :gpml.handler.tag/by-topic {:db #ig/ref :duct.database/sql}
  :gpml.handler.tag/all {:db #ig/ref :duct.database/sql}

  :gpml.handler.organisation/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.organisation/post {:db #ig/ref :duct.database/sql
                                   :mailjet-config #ig/ref :gpml.config/mailjet}
  :gpml.handler.organisation/post-params {}
  :gpml.handler.organisation/get-id {:db #ig/ref :duct.database/sql}

  :gpml.handler.image/get {:db #ig/ref :duct.database/sql}

  :gpml.handler.file/profile-cv {:db #ig/ref :duct.database/sql}

  :gpml.handler.favorite/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.favorite/post {:db #ig/ref :duct.database/sql}
  :gpml.handler.favorite/post-params {}

  :gpml.handler.env/get {:auth0 {:domain #duct/env "OIDC_ISSUER"
                                 :clientId #duct/env "OIDC_AUDIENCE"}
                         :sentry {:dsn #duct/env "SENTRY_DSN"
                                  :environment #duct/env "ENV_NAME"}}

  :gpml.handler.detail/topics {}
  :gpml.handler.detail/get {:db #ig/ref :duct.database/sql}
  :gpml.handler.detail/put {:db #ig/ref :duct.database/sql}
  :gpml.handler.detail/put-params {}

  :duct.migrator/ragtime {:migrations #ig/ref :duct.migrator.ragtime/resources}
  :duct.migrator.ragtime/resources {:path "migrations"}
  :duct.database/sql {:jdbc-url #duct/env "DATABASE_URL"}

  :gpml.auth/auth-middleware {:issuer #duct/env "OIDC_ISSUER"
                              :audience #duct/env "OIDC_AUDIENCE"
                              :db #ig/ref :duct.database/sql}
  :gpml.auth/auth-required {}
  :gpml.auth/approved-user {:db #ig/ref :duct.database/sql}
  :gpml.auth/admin-required-middleware {:db #ig/ref :duct.database/sql}

  :gpml.handler.monitoring/collector {}

  :gpml.handler.monitoring/jetty-configurator
  {:collector #ig/ref :gpml.handler.monitoring/collector}

  :gpml.handler.monitoring/hikaricp
  {:hikari-cp #ig/ref :duct.database.sql/hikaricp
   :metrics-collector #ig/ref :gpml.handler.monitoring/collector}

  }

 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/test  #duct/include "test"
 :duct.profile/prod
 {
  :gpml.handler.main/handler {:collector #ig/ref :gpml.handler.monitoring/collector}
  :duct.server.http/jetty {:configurator #ig/ref :gpml.handler.monitoring/jetty-configurator}
  :duct.logger/timbre
  {:min-level     :warn
   :set-root-config? true
   :appenders {:out #ig/ref :duct.logger.timbre/println
               :sentry #ig/ref :gpml.handler.monitoring/sentry-logger}}

  :duct.logger.timbre/println {}

  :gpml.handler.monitoring/sentry-logger
  {:dsn #duct/env "SENTRY_DSN"
   :env #duct/env "ENV_NAME"
   :host #duct/env "POD_NAME"
   :version #duct/env "APP_VERSION"}

  }

 :duct.module/logging {}
 :duct.module/sql {}
 :duct.module/web {}
 }
